<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Flutter news</title>
      <link href="/2023/10/17/Flutter_news/"/>
      <url>/2023/10/17/Flutter_news/</url>
      
        <content type="html"><![CDATA[<p>Flutter transforms the app development process. Build, test, and deploy beautiful mobile, web, desktop, and embedded apps from a single codebase.</p><hr><h3 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h3><p>基于flutter框架搭建的新闻查询app</p><h3 id="欢迎页"><a href="#欢迎页" class="headerlink" title="欢迎页"></a>欢迎页</h3> <div align="center"> <img src="/2023/10/17/Flutter_news/1.png" width="30%" height="30%"> </div> <h4 id="通过ElevatedButton组件跳转到登录页"><a href="#通过ElevatedButton组件跳转到登录页" class="headerlink" title="通过ElevatedButton组件跳转到登录页"></a>通过ElevatedButton组件跳转到登录页</h4> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">child: ElevatedButton(</span><br><span class="line">     style: ElevatedButton.styleFrom(</span><br><span class="line">       shape: RoundedRectangleBorder(</span><br><span class="line">         borderRadius: Radii.k6pxRadivs</span><br><span class="line">       ),</span><br><span class="line">       backgroundColor: AppColors.primaryElement,</span><br><span class="line">       textStyle: TextStyle(</span><br><span class="line">         color: AppColors.primaryText</span><br><span class="line">       )</span><br><span class="line">     ),</span><br><span class="line">     child: Text(</span><br><span class="line">       <span class="string">&quot;开始浏览&quot;</span></span><br><span class="line">     ),</span><br><span class="line">     onPressed: ()&#123;</span><br><span class="line">       debugPrint(<span class="string">&quot;helloworld&quot;</span>);</span><br><span class="line">       Navigator.pushNamed(context, <span class="string">&quot;./sign-up&quot;</span>);</span><br><span class="line">     &#125;,</span><br><span class="line">   ),</span><br></pre></td></tr></table></figure><p>ElevatedButton是Flutter中的一个按钮组件，通过onPressed点击事件的回调函数跳转到登录页</p><h3 id="登陆页"><a href="#登陆页" class="headerlink" title="登陆页"></a>登陆页</h3> <div align="center"> <img src="/2023/10/17/Flutter_news/2.png" width="30%" height="30%"> </div><h4 id="检测输入框实现登陆功能"><a href="#检测输入框实现登陆功能" class="headerlink" title="检测输入框实现登陆功能"></a>检测输入框实现登陆功能</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">final TextEditingController _accountController = TextEditingController();</span><br><span class="line"> </span><br><span class="line">final TextEditingController _passwordController = TextEditingController();</span><br></pre></td></tr></table></figure><p> 声明账号，密码输入框</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">Future&lt;bool?&gt; _handInSign() async &#123;</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Future&lt;bool?&gt;表示一个返回bool类型或null的异步操作。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!duIsAccount(_accountController.value.text))&#123;//如果输入的值和duIsAccount不匹配</span><br><span class="line">  await Fluttertoast.showToast(msg: <span class="string">&quot;账号不规范&quot;</span>);</span><br><span class="line">  <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!duCheckStingLength(_passwordController.value.text, 6))&#123;</span><br><span class="line">  await Fluttertoast.showToast(msg: <span class="string">&quot;密码长度不够&quot;</span>);</span><br><span class="line">  <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>校验用户输入的值与在utlis.dart中定义的duIsAccount正则表达式、duCheckStingLength是否匹配</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">UserLoginResponseEntity userProfile =</span><br><span class="line">await UserAPI.login(context: context, params: myparse);</span><br></pre></td></tr></table></figure><p>调用apis中的登陆方法并传值context，myparse</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(userProfile.accessToken.isNotEmpty)&#123;</span><br><span class="line">      Navigator.pushNamed(context, <span class="string">&quot;./app&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>判断accessToken是否不为空，如果不为空则通过Navigator跳转到首页<br>在Flutter中，accessToken是在某些情况下使用的身份验证令牌，例如在与后端服务器交互或使用某些第三方服务时。它通常用于证<br>明你的应用程序或用户的身份，并授予对特定资源的访问权限。 ————GPT</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>funk</title>
      <link href="/2023/10/14/funk-1/"/>
      <url>/2023/10/14/funk-1/</url>
      
        <content type="html"><![CDATA[<h2 id="【吉他干货】想搞懂Funk？你必须看这篇文章！"><a href="#【吉他干货】想搞懂Funk？你必须看这篇文章！" class="headerlink" title="【吉他干货】想搞懂Funk？你必须看这篇文章！"></a>【吉他干货】想搞懂Funk？你必须看这篇文章！</h2><p><img src="/2023/10/14/funk-1/1.png"><br><img src="/2023/10/14/funk-1/2.png"><br><img src="/2023/10/14/funk-1/3.png"><br><img src="/2023/10/14/funk-1/4.png"><br><img src="/2023/10/14/funk-1/5.png"><br><img src="/2023/10/14/funk-1/6.png"><br><img src="/2023/10/14/funk-1/7.png"><br><img src="/2023/10/14/funk-1/8.png"><br><img src="/2023/10/14/funk-1/9.png"><br><img src="/2023/10/14/funk-1/10.png"><br><img src="/2023/10/14/funk-1/11.png"><br><img src="/2023/10/14/funk-1/12.png"><br><img src="/2023/10/14/funk-1/13.png"><br><img src="/2023/10/14/funk-1/14.png"><br><img src="/2023/10/14/funk-1/15.png"><br><img src="/2023/10/14/funk-1/16.png"><br><img src="/2023/10/14/funk-1/17.png"><br><img src="/2023/10/14/funk-1/18.png"><br><img src="/2023/10/14/funk-1/19.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/17/hello-world/"/>
      <url>/2023/06/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
